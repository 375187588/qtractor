Qtractor - An Audio/MIDI multi-track sequencer
----------------------------------------------

ChangeLog

0.1.0   2007-12-13  Work in progress...

- Audio clip time-stretching makes its debut, with code adapted and
  refactored from the SoundTouch library, under the (L)GPL umbrella.

- New "Options.../Audio/Playback/Quick seek time-stretching" global
  option, providing a quick seek mode (hierarchical search) while
  doing all audio buffer time-stretching.

- Changing session tempo will automatically apply the corresponding
  time-stretch percent factor to all in-place audio clips. Audio
  clip dialog also includes a new time-stretch property setting.

- Master (default) buses are always set to Duplex mode, being now
  an enforced update policy while on the Buses dialog.

- A stupid lockup bug (infinite loop) was spotted on the track bus
  assignment method and squashed (thanks, lexridge).

- New keyboard shortcuts for toggling the Connections tool (F8) and
  the mighty Mixer tool (F9) windows.

- Avoid showing a context menu while right-clicking on time rulers.

- Audio clip waveform drawing gets additional closing points.

- It is now possible to change the length/size of a clip by dragging
  its left or right edges, while in the main track-view. Shift+drag
  will also time-stretch to the resulting audio clip length.

- Another off-by-one mistake was corrected, which was causing audio
  clips to go out-of-sync on loop turnover boundary; also changed
  the loop turnaround strategy, now honoring already cached periods.

- A race-condition has been mitigated in the audio-buffer thread,
  that was exposed and lead to sudden application freezing upon
  changing some composite audio clip commands.

- Take absolute audio peak values only, making peak files a little
  bit shorter and hopefully faster to load and draw as waveforms.


0.0.9   2007-11-30  The Adolescence Prime

- Drag-and-dropping of MIDI files without specific track or channel,
  into existing tracks, is now rejected. The drop operation is now
  allowed on the track-view blank area only, meaning the same as the
  complete MIDI file import into session.

- Record actual MIDI clip length to last play-head position,
  instead of time of last event in the recorded sequence.

- Connections item lists gets properly sorted, as intended.

- Clear connection persistance once an explicit discconnection is
  issued on any of the (intrinsic) bus ports.

- MIDI output buses now get the panning slider to spit out some
  GM system master balance (sysex) messages, being now enabled.

- Mouse hovering on the clip fade-in/out handles, while in the
  main track-view, gets its long due cursor pointer feedback.

- Fixed a off-by-one boundary issue on MIDI clip event playback,
  which were enqueuing duplicated MIDI events on every read-ahead
  output thread processing cycle (1 sec).

- Transport menu and toolbar are now featured on the MIDI Editor.

- Use actual session name when asking to save changed session.

- Transport loop setting keyboard shortcuts swapped: Ctrl+L will
  set the loop immediately, and Shift+Ctrl+L will toggle on/off.

- Changing MIDI event duration may now affect MIDI clip duration.

- Alternate sharp-note color lines have returned to MIDI Editor
  canvas, as was the shadow color marking the end of MIDI clip.


0.0.8   2007-11-12  The Twelfth Tight

- Bus context menu is now accessible from respective mixer strip.

- Fixed a subtle crash-suicide issue when invoking the bus dialog
  with a double-click over the corresponding mixer bus strip; also
  fixed the sloppy ganguing mistake when changing mixer bus gain
  (volume) and panning values.

- MIDI Omni mode (sort of) makes its entrance as a new MIDI track
  property, meaning that is now finally possible for the capture of
  any unfiltered MIDI channel event, without regard to the current
  channel assignment, which still applies for playback purposes.

- Audio (pass-)through has been also implemented, now being a common
  and consistent property of both audio and MIDI buses, provided
  those are set in duplex mode (input and output).

- Re-touched follow-playhead and continue-past-end tool icons, again
  to be a bit softer and not so bright as to hurt someones eyes.


0.0.7   2007-10-31  The Eleventh Tower

- Suspend auto-follow-playhead while dragging or moving content over
  the main track and midi editor views; re-touched follow-playhead
  and new continue-past-end tool icons.

- Playback is now forced complete full-stop whenever play-head goes
  behind the current session length and/or loop-end and the newer
  "continue past end" option is enabled from transport menu.

- Tool/child windows position and size preservation fixed.

- MIDI (pass-)through has been finally implemented, after several
  kind requests, it applies as a property of duplex-mode MIDI buses;
  this new setting is configurable from the View/Buses... dialog;
  also from respective new input bus mixer-strip button; when enabled,
  implies all incoming MIDI events at the input bus will pass-through
  unchanged to the corresponding output bus, as found useful just for
  direct monitoring one's performance without the help of any extra
  circumvent or kludgy connections.

- Mouse cursor shape changes accordingly while hovering in header
  time-scale rulers, both in main track-view and MIDI editor.

- Track-view clipboard paste action has been refactored, with the
  user interface consistent with the same functionality featured on
  the MIDI editor: the clipboard selection being pasted now floats
  at the mouse pointer and can be moved around before placed into
  its final position, either with the mouse or keyboard arrow keys.

- A unitialized member variable bug affecting all MIDI clips has
  been discovered and squashed; this one has been lurking for quite
  some time and was causing wrong clip editing results, specially
  when tempo or meter differs between session and the MIDI file.

- Keyboard step-moving is now allowed while pasting in MIDI editor.

- Track-view clip selection can now be drag-moved into the void
  (bottom) view area creating brand new tracks automagically.

- Losing focus resets all current keyboard step-moves in progress,
  affecting the main track-view and all MIDI editor as well.

- As done before on the MIDI editor, the main track-view current
  selection may be step-wise moved using the keyboard arrow keys
  and the enter/insert keys for final placement; horizontal step
  movement is quantized according to current snap setting; vertical
  key-step movement is only allowed to selected clips belonging to
  one single and the same track.

- Immediate session loop settting, accessible from the main menu.

- Track properties dialog gets fixed again in its auto-size treat.

- Another audio-buffer thread bug was scrubbed off, which was
  causing spurious and audible garbage on certain loop workloads.


0.0.6   2007-10-09  The Tenth Commencement

- A bit more of precision is achieved over the metronome regular
  ticking and both the audio and MIDI monitor meters.

- A rudimentary MIDI metronome is now in place; parameters, like
  MIDI channel, bar and beat accent note, velocity and duration,
  are readily configurable from the main menu, View/Options...
  /MIDI/Metronome dialog.

- Track properties dialog now gets tightly auto-sized, depending
  whether its an audio or a MIDI track.

- MIDI clips are now auto-extendable when adding or moving events
  beyond the clip length and while in the MIDI Editor, of course.

- MIDI editor current selection can now be step-wise moved using
  the keyboard arrow keys and the enter/insert keys as for final
  placement; horizontal step movement is subordinated to current
  snap per beat setting, no less than unity; vertical step moves
  are obviously quantized to the next semitone.

- Get configure to try and detect the correct qmake location and
  insert it the search order, so let the qt4 tools take precedence
  when --with-qt option is given and older qt3 ones coexist and
  are found located ahead in the PATH.

- Drifting correction on audio and MIDI engines was seriously
  infected in some kind of snafu conception, as evidence lead
  to even worse drifting being detected to much of great despair,
  specially after recording and/or bouncing audio tracks from
  MIDI sequenced material. Credit must certainly go to Christian
  Schoenebeck on splatting this sloppy one on the face.

- MIDI editing actions while playing now get immediate feedback;
  this was possible to some internal interface redesign of all
  MIDI editor accessory classes, making the MIDI clip now being
  the main editing target object instead of just the MIDI event
  sequence as it was previously.

- Simple as it could ever be, the build executive summary report
  is now given on configure.

- The internal decoded frame list for MPEG 1Audio Layer III (mp3)
  audio files (ie. via libmad) has been made one-time cached as
  global shared objects, benefitting from the fact that the list
  is always completely (re)built during the peak file computation,
  and thus speeding up all frame accurate access operations (seek)
  over this specific audio file format.

- More eye-candy is sneaking in the MIDI editor: there's new view
  options on the View menu: Note Color and Value Color, affecting
  note event colors according to pitch and/or velocity.

- New view option on the MIDI editor: on menu View/Note Duration
  switches whether events are shown proportional to their durations
  or as simple vertical candlesticks.

- New snap-per-beat divisors are now available (Beat/3, 6, 12, 24
  and 48), giving support for triplets for the very first time
  (after a heads-up suggested  patch from Marko, thanks).


0.0.5   2007-09-08  The Ninth Hitch Nail

- MIDI edit tools (quantize, transpose, normalize, randomize,
  resize) are all functional and ready for experimentalism;
  gets in its own top-level menu and form with named preset
  store and recall functionality (EXPERIMENTAL).

- Main form backward and rewind transport actions are now being
  immediately enabled when playing from the session (zero-time)
  start position.

- Audio and MIDI export sneaks in and in form and accessible
  from the main Track menu (EXPERIMENTAL).

- MIDI track channel is now properly set on session (re)load;
  track background color changes was missing the alpha setting.

- The mix-down buffering was fixed again, now taking multi-track
  overlapping clips into consideration (was a lot more broken
  since the recent glitch-looping fix).

- Dirty MIDI clip editing control has been fixed but still
  somewhat hacky nevertheless.

- First attempt on solving a nasty MIDI editor bug, which was
  quietly and severely crippling MIDI files while saving offset
  edited clips.

- Session loop (re)setting is finally now an undoable command.

- Yet another insidious bug has been swept away from under the
  carpet: once again on audio looping, some astonishing old and
  crappy session cursor seek-backward statement was lurking to
  be laid off. Gone now, simply as it is, growing old on this :)

- A tremendous bug has been fixed: audio looping is now a little
  more glitch-free as the mix-down buffering was badly broken
  even since its primordial implementation. Rejoice.

- Minor improvements on track-view cursor updates and visual
  tracking while recording.

- MIDI editor windows get their keyboard accelerator/shortcuts
  back in business, whether opted as tools always on top or not.

- The infamous "Keep tool windows always on top" global option
  is now infecting the Connections, Mixer, Plugin and MIDI Editor
  window instances with no probable regrets. To be used with
  discretion, of course.

- Session update/initialization gets it clean on startup.

- Range selection action (Ctrl+R) is now back in business with
  the added bonus of being accessible from all MIDI editor
  instances too.

- Common edit-head and tail cursor positions are now under common
  control and display from all MIDI editor instances; the session
  loop-start/end points are now also shown on every time-line and
  share the same control behavior across all MIDI editor instances.


0.0.4   2007-07-19  The Eighth Wanderer

- Main toolbar tempo spin-box gets loose from keyboard change
  tracking (Qt >= 4.3); custom spin-box compilation fix for
  Qt 4.1.

- Illusive but nasty Connections/Patchbay item tooltip crash bug
  has been hopefully fixed (Qt >= 4.3); QComboBox::editTextChanged()
  signal replaces old QComboBox::textChanged().

- Combo-box setup history has been corrected on restore, which
  was discarding the very initial default (factory) contents.

- Make debian package build depend on libqt4-dev; win32 console
  flag is back to qmake project file.

- MIDI instrument selection (e.g. on track form) gets fixed and
  improved.

- Sorting method for the connections port list has been refactored;
  potential crash bug fix on connections sorting method.

- Messages class accessor methods constness fix.

- Got rid of some autoconf redundand thingies on configure;
  late debian changelog update.

- Desktop categories update: AudioVideo.

- README correction.


0.0.3   2007-06-23  The Seventh Draught

- Crash fix on the connections widget, was a matter of refactoring
  the refresh/clear slots.

- Help menu added to MIDI editor form (redirected and same to main
  form anyway).

- Clip properties form gets its proper sanity check, querying any
  existing clip editor whether its safe to apply the new settings.

- Mixer sliders get their long due valued correction, hopefully.

- Transport backward and play/stop are now made accessible from
  the MIDI editor widget, through their keyboard accelerator
  shortcuts (backspace and space, respectively).

- Transport actions (play, rec, rew and ffwd) are now kept stable
  on a single point, instead of being scattered all over the main
  form code; transport visual feedback might get affected,
  specially regarding the MMC processing.

- Application icon is now officially installed
  into ${prefix}/share/pixmaps.

- Spec file is now a bit more openSUSE compliant; just made RPM
  requirements as exigent as the new debian ones.

- Paste cursor is now properly preserved after leaving MIDI editor
  views.

- Amazingly why this was not spotted before, the main application
  logo-icon has been downscaled to the 32x32 pixel standard icon
  size.

- MIDI clip editor clipboard gets singleton status and is now
  shared on all MIDI editor instances. Similarly to the main
  track-view, shift/ctrl-left-clicking on the MIDI editor views
  sets the current session play-head position.

- A desktop entry file has been included on install, at last.

- Clips in main track-view get more info in the form of tooltips.

- Major rounding fix to time-scaling and most specially on all
  those internal MIDI I/O methods.

- Extended range selection from the time-ruler and key-list
  headers is now possible by click-and-drag the mouse pointer.

- Play-head cursor is now also displayed and/or set position
  on all open MIDI clip editors time line view. As in the main
  application form, a new local follow play-head option is also
  featured on the MIDI editor view menu and toolbar.

- All MIDI file save operations are now logged to main messages
  and files are added to the main files list view.

- Initial debianization.

- MIDI capture/record file format (SMF Format 0 or 1) is now
  an user option, introducing the new MIDI tab on the global
  View/Options dialog.

- A bad old-time session cursor glitch has been apparently fixed.

- Make sure the generic clip properties form is modal.

- Major rewrite and adaptation to the session time-scale properties,
  making its way for a brand new command instance: the session-tempo
  command.

- Changing the snap-per-beat combobox value on the main window
  toolbar does not make it as an undoable command anymore.

- Long due MIDI clip editor integration has come to reality.

- Major rewrite on the MIDI sequence file read/write methods,
  in preparation to the coming MIDI clip editor.

- Status-bar session length label now gets rightly updated,
  while extended recording, of course.

- Clip properties fade-in/out lengths, gets their old due
  constraints.

- Main transport time display is now an editable custom spin-box;
  the Tempo (BPM) spin-box has seen new colors (green on black).

- Transport time display format option adds the new choice of
  absolute frame number, alternative to previous time and BBT.

- The frame-time based spin-boxes, on the clip properties form,
  were replaced with a new custom one, allowing for alternate
  frame, time and bbt input/display formats.

- Time-scale helper class has been introduced.


0.0.2   2007-05-26  The Sixth Lord

- Audio/MIDI connections gets slightly refactored, contributing
  for whole robustness, specially in case of incidental engine
  shutdown.

- Mixer window gets a minimum default height bump.

- Clip fade-in/out type changes have been properly fixed.

- Complete refactoring of the command class pattern, making it
  now derived from QObject and not having a reference to the
  main form anymore.

- Inoperative context menu event handler has been removed from
  the track-view.

- MIDI sequence note-on event tracking now uses faster QHash
  class, instead of original QMap.

- Off-by-one bug fix on MIDI track write method, while parsing
  co-incident note-on/off events in the wrong order and thus
  leaving note events with an invalid (zero) duration; obviously
  affecting MIDI recording in very special circumstances.

- Minor and rather innocuous drop at this time in the MIDI event
  class structure: the flags member field.

- Port connections now get their lines correctly drawn; strangely
  enough, the connection lines were being painted only for the
  parent client items, probably since the Qt4 migration (aka.
  Halloween files).

- Early clip editing is in place (clip name, start, offset and
  length parameters, fade in/out length and type).

- Some menu item text capitalizations.


0.0.1   2007-05-07  The Filthy Fifth

- Newer JACK 0.105.0 seems to bitch, probably correctly, about the
  return value of the process callback. Make it to bitch no more by
  ensuring the JACK client is always issuing the innocuous 0 (zero)
  return value.

- Important fixes have been issued, affecting MIDI recording: MIDI
  sequence zero-time event insertion; MIDI file pending note-off
  processing on write-track method.

- Qt4 migration complete.


0.0.0   2006-10-31  The Halloween Files
